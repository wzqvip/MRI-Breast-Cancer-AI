SlowR50_5ch(
  (model): Net(
    (blocks): ModuleList(
      (0): ResNetBasicStem(
        (conv): Conv3d(5, 64, kernel_size=(1, 7, 7), stride=(1, 2, 2), padding=(0, 3, 3), bias=False)
        (norm): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): ReLU()
        (pool): MaxPool3d(kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=[0, 1, 1], dilation=1, ceil_mode=False)
      )
      (1): ResStage(
        (res_blocks): ModuleList(
          (0): ResBlock(
            (branch1_conv): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
            (branch1_norm): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (branch2): BottleneckBlock(
              (conv_a): Conv3d(64, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_a): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_a): ReLU()
              (conv_b): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
              (norm_b): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_b): ReLU()
              (conv_c): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_c): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (activation): ReLU()
          )
          (1-2): 2 x ResBlock(
            (branch2): BottleneckBlock(
              (conv_a): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_a): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_a): ReLU()
              (conv_b): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
              (norm_b): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_b): ReLU()
              (conv_c): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_c): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (activation): ReLU()
          )
        )
      )
      (2): ResStage(
        (res_blocks): ModuleList(
          (0): ResBlock(
            (branch1_conv): Conv3d(256, 512, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
            (branch1_norm): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (branch2): BottleneckBlock(
              (conv_a): Conv3d(256, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_a): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_a): ReLU()
              (conv_b): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
              (norm_b): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_b): ReLU()
              (conv_c): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_c): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (activation): ReLU()
          )
          (1-3): 3 x ResBlock(
            (branch2): BottleneckBlock(
              (conv_a): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_a): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_a): ReLU()
              (conv_b): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
              (norm_b): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_b): ReLU()
              (conv_c): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_c): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (activation): ReLU()
          )
        )
      )
      (3): ResStage(
        (res_blocks): ModuleList(
          (0): ResBlock(
            (branch1_conv): Conv3d(512, 1024, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
            (branch1_norm): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (branch2): BottleneckBlock(
              (conv_a): Conv3d(512, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
              (norm_a): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_a): ReLU()
              (conv_b): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
              (norm_b): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_b): ReLU()
              (conv_c): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_c): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (activation): ReLU()
          )
          (1-5): 5 x ResBlock(
            (branch2): BottleneckBlock(
              (conv_a): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
              (norm_a): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_a): ReLU()
              (conv_b): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
              (norm_b): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_b): ReLU()
              (conv_c): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_c): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (activation): ReLU()
          )
        )
      )
      (4): ResStage(
        (res_blocks): ModuleList(
          (0): ResBlock(
            (branch1_conv): Conv3d(1024, 2048, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
            (branch1_norm): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (branch2): BottleneckBlock(
              (conv_a): Conv3d(1024, 512, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
              (norm_a): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_a): ReLU()
              (conv_b): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
              (norm_b): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_b): ReLU()
              (conv_c): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_c): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (activation): ReLU()
          )
          (1-2): 2 x ResBlock(
            (branch2): BottleneckBlock(
              (conv_a): Conv3d(2048, 512, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
              (norm_a): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_a): ReLU()
              (conv_b): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
              (norm_b): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (act_b): ReLU()
              (conv_c): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
              (norm_c): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (activation): ReLU()
          )
        )
      )
      (5): ResNetBasicHead(
        (pool): AdaptiveAvgPool3d(output_size=(1, 1, 1))
        (dropout): Dropout(p=0.5, inplace=False)
        (proj): Linear(in_features=2048, out_features=2, bias=True)
        (output_pool): AdaptiveAvgPool3d(output_size=1)
      )
    )
  )
)
Test Accuracy = 0.8571
Sample 0: label=1, pred=1, used=[CT,PET], prob=93.33%
Sample 1: label=1, pred=1, used=[CT,PET], prob=54.37%
Sample 2: label=1, pred=1, used=[CT,PET], prob=99.94%
Sample 3: label=0, pred=0, used=[CT,PET], prob=0.00%
Sample 4: label=0, pred=0, used=[CT,PET], prob=0.00%
Sample 5: label=0, pred=0, used=[CT,PET], prob=0.08%
Sample 6: label=0, pred=0, used=[CT,PET], prob=0.00%
Sample 7: label=1, pred=1, used=[MR-DWI,MR-T1,MR-dynamic], prob=98.96%
Sample 8: label=1, pred=1, used=[CT,PET], prob=94.44%
Sample 9: label=1, pred=0, used=[MR-DWI,MR-T1,MR-dynamic], prob=0.02%
Sample 10: label=1, pred=1, used=[CT,PET], prob=53.64%
Sample 11: label=1, pred=0, used=[MR-DWI,MR-T1,MR-dynamic], prob=0.01%
Sample 12: label=0, pred=0, used=[CT,PET], prob=0.00%
Sample 13: label=0, pred=0, used=[MR-DWI,MR-T1,MR-dynamic], prob=0.01%
Sample 14: label=0, pred=0, used=[MR-DWI,MR-T1,MR-dynamic], prob=0.00%
Sample 15: label=0, pred=0, used=[CT,PET], prob=0.00%
Sample 16: label=0, pred=0, used=[CT,PET], prob=37.67%
Sample 17: label=0, pred=0, used=[MR-DWI], prob=0.00%
Sample 18: label=0, pred=0, used=[MR-DWI,MR-T1,MR-dynamic], prob=0.00%
Sample 19: label=0, pred=1, used=[CT,PET], prob=71.00%
Sample 20: label=0, pred=0, used=[MR-DWI,MR-T1,MR-dynamic], prob=0.25%

Classification Report:
              precision    recall  f1-score   support

           0     0.8571    0.9231    0.8889        13
           1     0.8571    0.7500    0.8000         8

    accuracy                         0.8571        21
   macro avg     0.8571    0.8365    0.8444        21
weighted avg     0.8571    0.8571    0.8550        21

Confusion Matrix:
[[12  1]
 [ 2  6]]
